itkMonogenicPhaseAnalysisEigenValuesImageFilterTest.cxx:73:3:  phaseAnalyzer->SetInput(vecInverseFFT->GetOutput());
itkMonogenicPhaseAnalysisEigenValuesImageFilterTest.cxx:74:3:  phaseAnalyzer->SetApplySoftThreshold(true);
itkMonogenicPhaseAnalysisEigenValuesImageFilterTest.cxx:75:3:  phaseAnalyzer->Update();
itkMonogenicPhaseAnalysisEigenValuesImageFilterTest.cxx:79:24:    Testing::ViewImage(phaseAnalyzer->GetOutput(1), "PhaseAnalyzer(Eigen) Amplitude:");
itkMonogenicPhaseAnalysisEigenValuesImageFilterTest.cxx:80:24:    Testing::ViewImage(phaseAnalyzer->GetOutput(2), "PhaseAnalyzer(Eigen) Phase:");
itkMonogenicPhaseAnalysisEigenValuesImageFilterTest.cxx:81:24:    Testing::ViewImage(phaseAnalyzer->GetOutput(0), "PhaseAnalyzer(Eigen) output:");
itkMonogenicPhaseAnalysisEigenValuesImageFilterTest.cxx:87:20:  writer->SetInput(phaseAnalyzer->GetOutput(0));

GetOutput:1:64:itkMonogenicPhaseAnalysisEigenValuesImageFilterTest.cxx:73:3:  phaseAnalyzer->SetInput(vecInverseFFT->GetOutput());
GetOutput:2:64:itkMonogenicPhaseAnalysisEigenValuesImageFilterTest.cxx:74:3:  phaseAnalyzer->SetApplySoftThreshold(true);
GetOutput:3:64:itkMonogenicPhaseAnalysisEigenValuesImageFilterTest.cxx:75:3:  phaseAnalyzer->Update();
GetOutput:4:86:itkMonogenicPhaseAnalysisEigenValuesImageFilterTest.cxx:79:24:    Testing::ViewImage(phaseAnalyzer->GetOutput(1), "PhaseAnalyzer(Eigen) Amplitude:");
GetOutput:5:86:itkMonogenicPhaseAnalysisEigenValuesImageFilterTest.cxx:80:24:    Testing::ViewImage(phaseAnalyzer->GetOutput(2), "PhaseAnalyzer(Eigen) Phase:");
GetOutput:6:86:itkMonogenicPhaseAnalysisEigenValuesImageFilterTest.cxx:81:24:    Testing::ViewImage(phaseAnalyzer->GetOutput(0), "PhaseAnalyzer(Eigen) output:");
GetOutput:7:82:itkMonogenicPhaseAnalysisEigenValuesImageFilterTest.cxx:87:20:  writer->SetInput(phaseAnalyzer->GetOutput(0));

itkPhaseAnalysisSoftThresholdImageFilterTest.cxx:77:3:  phaseAnalyzer->SetInput(vecInverseFFT->GetOutput());
itkPhaseAnalysisSoftThresholdImageFilterTest.cxx:78:3:  phaseAnalyzer->Update();
itkPhaseAnalysisSoftThresholdImageFilterTest.cxx:81:24:    Testing::ViewImage(phaseAnalyzer->GetOutputCostPhase(), "PhaseAnalyzer(Soft) output:");

itkRieszWaveletPhaseAnalysisTest.cxx:128:5:    phaseAnalyzer->SetInput(vecInverseFFT->GetOutput());
itkRieszWaveletPhaseAnalysisTest.cxx:129:5:    phaseAnalyzer->SetApplySoftThreshold(true);
itkRieszWaveletPhaseAnalysisTest.cxx:130:5:    phaseAnalyzer->Update();
itkRieszWaveletPhaseAnalysisTest.cxx:131:37:    fftForwardPhaseFilter->SetInput(phaseAnalyzer->GetOutput(0));
itkRieszWaveletPhaseAnalysisTest.cxx:143:24:    Testing::ViewImage(phaseAnalyzer->GetOutput(0), "Wavelet coef " + n2s(nout) + " PhaseAnalyzed" );
